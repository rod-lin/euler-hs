{-

Problem 44. Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

-}

module Euler.P44 where

import Debug.Trace

import Euler.Util

pentNum :: Int -> Int
pentNum n = (3 * n * n - n) `div` 2

isPentNum :: Int -> Bool
isPentNum p = solveQuadEqInt 3 (-1) (-2 * p) /= Nothing

-- search :: [(Int, Int)]
-- search = do
--     a <- [ 1 .. 50000 ]
--     b <- [ 1 .. a - 1 ] -- a > b

--     if a `mod` 1000 == 0 && b == 1 then
--         traceM (show (a, b))
--     else
--         return ()

--     let a = 3
--         b = -1
--         c1 = a + b - 3 * a * a - 3 * b * b
--         c2 = a - b - 3 * a * a + 3 * b * b

--     -- a - b - n == 3 * (a ^ 2 - b ^ 2 - n ^ 2) &&
--     if solveQuadEqInt a b c1 /= Nothing &&
--        solveQuadEqInt a b c2 /= Nothing then
--         return (a, b)
--     else
--         fail "not matched"

search :: [(Int, Int)]
search = do
    an <- [ 1 .. 10000 ]
    bn <- [ 1 .. an - 1 ]

    if isPentNum (pentNum an + pentNum bn) &&
       isPentNum (pentNum an - pentNum bn) then
        return (an, bn)
    else
        fail "not matched"

-- 5482660
solve =
    let (an, bn) = head search
    in pentNum an - pentNum bn
